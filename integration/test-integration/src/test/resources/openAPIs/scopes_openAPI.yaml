swagger: '2.0'
info:
  version: 1.0.5
  title: SwaggerPetstoreScopes
security:
  - petstore_auth:
      - 'write:scopes'
x-wso2-cors:
  accessControlAllowOrigins:
    - http://test1.com
    - http://test2.com
  accessControlAllowHeaders:
    - Authorization
  accessControlAllowMethods:
    - GET
  accessControlAllowCredentials: true
host: 'mockBackend:2383'
x-wso2-production-endpoints:
  urls:
    - 'http://mockBackend:2383/v2'
x-wso2-basePath: /scopes/v2
schemes:
  - http
paths:
  /pet/findByStatus:
    get:
      summary: Finds Pets by status
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
  '/pet/{petId}':
    get:
      summary: Find pet by ID
      produces:
        - application/json
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Pet'
        '404':
          description: Pet not found
      security:
        - petstore_auth: []
  '/pets/findByTags':
    get:
      summary: Finds Pets by tags
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
      security:
        - petstore_auth:
            - 'write:scopes'
            - 'read:scopes'
      deprecated: true
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://mockBackend:2380/oauth/authorize'
    flow: implicit
    scopes:
      'read:scopes': read your pets
      'write:scopes': modify pets in your account
definitions:
  Pet:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: doggie
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
