swagger: "2.0"
info:
  version: 1.0.5
  title: Swagger Petstore Production and Sandbox Clusters
  license:
    name: MIT
host: mockBackend:2383
basePath: /v2
x-wso2-basePath: /v2/cluster
x-wso2-production-endpoints:
  urls:
    - http://mockBackend:2383/v2
x-wso2-sandbox-endpoints:
  urls:
    - http://mockBackend:2383/v2
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /pets/findByTags:
    get:
      x-wso2-disable-security: true
      tags:
        - pet
      summary: Finds Pets by tags
      description: 'Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.'
      operationId: findPetsByTags
      produces:
        - application/json
        - application/xml
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        '400':
          description: Invalid tag value

  /pet/findByStatus:
    x-wso2-production-endpoints:
      urls:
        - http://mockBackend:2383/v2
    x-wso2-sandbox-endpoints:
      urls:
        - http://mockBackend:2383/v2
    get:
      tags:
        - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      produces:
        - application/json
        - application/xml
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: array
          items:
            type: string
            enum:
              - available
              - pending
              - sold
            default: available
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        '400':
          description: Invalid status value

definitions:
  Pet:
    type: "object"
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tag:
        type: string
  Pets:
    type: array
    items:
      $ref: '#/definitions/Pet'
  Error:
    type: "object"
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
